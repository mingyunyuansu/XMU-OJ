#include <iostream>
#include <cmath>
 
using namespace std;
 
//
//看到网上的大神指点，原来一个超级素数的各个位至少应满足：
//左边第一位只有取{2，3,5,7}，后面的每一位只能取{1,3,7,9}
//
bool is_prime(int num) {
    if (num == 2)
        return true;
    if (num == 1)
        return false;
    for (int i = 2; i <= (int) sqrt(num); ++i)
        if (num % i == 0)
            return false;
    return true;
}
 
void dfs(int n, int p, int number, int key[2][4]) {
    if (n - 1 == p) {
        cout << number << endl;
        return;
    }
    for (int j = 0; j < 4; ++j)
        if (is_prime(number * 10 + key[0][j]))
            dfs(n, p + 1, number * 10 + key[0][j], key);
}
 
int main() {
    int n, num;
    cin >> n;
    int key[][4] = {{1, 3, 7, 9},
                    {2, 3, 5, 7}};
    for (int i = 0; i < 4; ++i)
        dfs(n, 0, key[1][i], key);
    return 0;
}
/**************************************************************
    Problem: 1009
    User: 22920142203903
    Language: C++
    Result: Accepted
    Time:0 ms
    Memory:1516 kb
****************************************************************/
